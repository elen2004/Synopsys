import csv
import os

FILENAME = "expenses.csv"

# Predefined expense categories
CATEGORIES = [
    "Food",
    "Transport",
    "Shopping",
    "Healthcare",
    "Entertainment",
    "Utilities",
    "Education"
]

def create_file():
    """Create the CSV file with header if it doesn't exist"""
    if not os.path.isfile(FILENAME):
        with open(FILENAME, mode='w', newline='') as file:
            writer = csv.writer(file)
            writer.writerow(["Category", "Amount"])  # Only category and amount

def add_expense():
    """Add a new expense entry"""
    print("\nChoose category:")
    for i, cat in enumerate(CATEGORIES, start=1):
        print(f"{i}. {cat}")
        
    try:
        category_index = int(input("Enter category number: ")) - 1
        if category_index not in range(len(CATEGORIES)):
            print("Invalid category selection.")
            return
        category = CATEGORIES[category_index]
    except ValueError:
        print("Invalid input. Please enter a number.")
        return

    try:
        amount = float(input("Enter amount: "))
    except ValueError:
        print("Invalid amount. Please enter a numeric value.")
        return

    with open(FILENAME, mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([category, amount])  # Only category and amount
    
    print("Expense added successfully!")

def display_summary():
    """Display an ASCII bar chart summary of expenses"""
    try:
        with open(FILENAME, mode='r') as file:
            reader = csv.reader(file)
            next(reader)  # skip header
            summary = {cat: 0 for cat in CATEGORIES}

            for row in reader:
                try:
                    category = row[0]
                    amount = float(row[1])
                    if category in summary:
                        summary[category] += amount
                except (ValueError, IndexError):
                    continue  # skip invalid rows

        print("\nExpense Summary:")
        print("----------------")
        for category in CATEGORIES:
            amount = summary[category]
            bar_length = int(amount)
            # Optional: cap bar length for readability
            # bar_length = min(bar_length, 50)
            bar = '#' * bar_length
            print(f"{category:<15} | {bar} ({amount:.2f})")

    except FileNotFoundError:
        print("No expense data found. Add some expenses first!")

def main():
    create_file()
    while True:
        print("\nExpense Tracker Menu")
        print("1. Add Expense")
        print("2. View Summary")
        print("3. Exit")

        choice = input("Enter your choice (1-3): ")

        if choice == "1":
            add_expense()
        elif choice == "2":
            display_summary()
        elif choice == "3":
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
